;-----------------------------------------------------
; PROGRAM:		stdio
; DESCRIPTION:	Standard input/output functions (cdecl)
; AUTHOR:		Alexander Meinke <ameinke@online.de>
; LICENCE:		Public Domain
; ASSEMBLER:	NASM 2.05.01
; LINKER:		ALINK (DOS)
; VERSION:		0.1
;-----------------------------------------------------


%ifndef STDIO_MAC
	%define STDIO_MAC

SEGMENT DATA USE16
	VIDEO:	equ		0xB800
	FCOLOR:	equ		0x0F00
	BCOLOR:	equ		0x0000
;	STRING:
;	MAX:	db		255
;	ACT:	resb	1
;	BUF:	times	255 db 0

SEGMENT CODE USE16

; WRITE A CHARACTER AT ROW, COLUMN
;	1	-	high byte row, low byte column
;	2	-	character
putcxy:
	mov bp, sp
	pusha

	mov bx, VIDEO
	mov es, bx

	mov ax, [bp+4]
	and ax, 0x00FF
	mov dx, [bp+2]
	and dx, 0x00FF

	mov bx, 2
	mul bl
	mov di, ax

	mov ax, [bp+4]
	xchg ah, al
	and ax, 0x00FF
	mov bx, 160
	mul bl
	add di, ax

	mov ax, FCOLOR
	or ax, BCOLOR
	or ax, dx
	stosw

.exit:
	popa
	ret

; WRITE A "$" TERMINATED STRING AT ROW, COLUMN
;	1	-	high byte row, low byte column
;	2	-	address of string
printxy:
	mov bp, sp
	pusha

	mov si, [bp+2]
	mov ax, [bp+4]

.loop:
	mov bl, [si]
	cmp bl, "$"
	je .exit
	push ax
	push bx
	call putcxy
	pop bx
	pop ax

	inc si
	inc ax
	jmp .loop

.exit:
	popa
	ret

; COMMENT
;	What number does Linux use for IVT? e.g. int 0xHH
;	The function is referenced by value in ah
; DO WE RUN IN DOS? E.G. DOS STRING ENDS WITH "$"
%ifdef DOS

; WRITE A CHARACTER (DOS)
;	1	-	character
putc:
	mov bp, sp
	pusha

	mov dx, [bp+2]
	mov ah, 0x02
	int 0x21

.exit:
	popa
	ret

; WRITE A NEWLINE WITH <LF><CR> (DOS)
newline:
	mov bp, sp
	pusha

	mov bx, 0x0A
	push bx
	call putc
	pop bx
	mov bx, 0x0D
	push bx
	call putc
	pop bx

.exit:
	popa
	ret

; WRITE A "$" TERMINATED STRING (DOS)
;	1	-	address of string
print:
	mov bp, sp
	pusha

	mov dx, [bp+2]
	mov ah, 0x09
	int 0x21

.exit:
	popa
	ret

; WRITE A "$" TERMINATED STRING WITH NEWLINE (DOS)
;	1	-	address to string
printnl:
	mov bp, sp
	pusha

	mov bx, [bp+2]
	push bx
	call print
	pop bx
	call newline

.exit:
	popa
	ret

; READ A CHARACTER WITH ECHO (DOS)
;	1	-	character read
getc:
	pusha

	mov ah, 0x01
	int 0x21

.exit:
	popa
	ret

; READ FROM STANDARD INPUT AND ADD "$"
;	1	-	address for resulting string
scan:
	mov bp, sp
	pusha

	mov si, [bp+2]

	mov dx, si
	mov ah, 0x0A
	int 0x21

	mov bl, [si+1]
	and bx, 0x00FF
	mov [si+bx+2], BYTE "$"

.exit:
	popa
	ret

%endif

%endif
