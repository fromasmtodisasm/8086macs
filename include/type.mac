;-----------------------------------------------------
; PROGRAM:		Types
; DESCRIPTION:	Check type of operand
; AUTHOR:		Alexander Meinke <ameinke@online.de>
; LICENCE:		Public Domain
; ASSEMBLER:	NASM 2.05.01
; LINKER:		ALINK (DOS)
; VERSION:		0.1
;-----------------------------------------------------

%ifndef TYPE_MAC
	%define TYPE_MAC

;SEGMENT DATA USE16
;	MAX:	db	255
;	ACT:	db	0
;	BUF:	times	255 db 0


;SEGMENT CODE USE16
; TEST WHETHER A STRING ONLY CONTAIN 0 and 1
;	arg:	1 - string
;	ret:	bx - 0 no, 1 yes
%macro isbin 1
	push di
	push ax
	push cx

	mov si, %1
	strlen %1
	mov bx, 1
%%.loop:
	lodsb
	cmp al, "0"
	je %%.next
	cmp al, "1"
	je %%.next
	cmp al, "$"
	je %%.exit
	jmp %%.false
%%.next:
	cmp cx, 0
	je %%.exit
	dec cx
	jmp %%.loop
%%.false:
	mov bx, 0
%%.exit:
	pop cx
	pop ax
	pop di
%endmacro

; DECIMAL TO DUAL
;	arg:	1 - string
;	ret:	ax - integer
%macro dedu 1
	push bx
	push cx
	push dx
	push di
	push si

	xor ax, ax
	xor bx, bx
	strlen %1
	mov di, 10
	mov si, %1
%%.loop:
	isnumeric [si]
	cmp dx, "n"
	je %%.notnumeric

	mov bl, [si]
	mul di
	and bx, 0x000F
	add ax, bx

	inc si
	loop %%.loop
	jmp %%.exit
%%.notnumeric:
	mov ax, -1
%%.exit:
	pop si
	pop di
	pop dx
	pop cx
	pop bx
%endmacro

; DUAL TO DECIMAL
;	arg:	1 - integer
;			2 - address to reserved bytes (min. 6 bytes)
;	ret:	none
%macro dude 2
	push ax
	push bx
	push dx
	push di

	mov ax, %1
	mov bx, 10
	xor dx, dx
	mov di, %2
	add di, 6
	mov [di], BYTE "$"
	dec di
%%.loop:
	div bx
	add dl, 0x30
	mov [di], dl
	dec di
	xor dx, dx
	cmp ax, 0
	jne %%.loop

	pop di
	pop dx
	pop bx
	pop ax
%endmacro

%endif
